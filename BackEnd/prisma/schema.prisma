// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}



model Cargo {
  id      Int      @id @default(autoincrement())
  nombre  String   @unique
  Usuario Usuario[]
}
model Carrera {
  id           Int           @id @default(autoincrement())
  nombre       String
  especialidad String

  OfertaAcademica OfertaAcademica[]
  PlanEstudios PlanEstudios[]
  Usuario Usuario[]
  EncabezadoFactura EncabezadoFactura[]
}

model Usuario {
  id               Int       @id @default(autoincrement())
  cedula           String    @unique
  nombre           String
  apellidos        String
  fecha_nacimiento String
  correo           String    
  contrasena       String
  id_cargo         Int
  id_carrera       Int
  Cargo            Cargo     @relation(fields: [id_cargo], references: [id], onDelete: Cascade)

  Carrera Carrera @relation(fields: [id_carrera], references: [id], onDelete: Cascade)
  Curso            Curso[]
  HistoricoAcademico HistoricoAcademico[]
Auditoria        Auditoria[]
EncabezadoFactura EncabezadoFactura[]
Matricula Matricula[]
}



model PlanEstudios {
  id        Int       @id @default(autoincrement())
  nombre    String
  anno      Int
  id_carrera Int
  Carrera   Carrera   @relation(fields: [id_carrera], references: [id], onDelete: Cascade)

  Materia   Materia[]
}

model Cuatrimestre {
  id                Int       @id @default(autoincrement())
  numero_cuatrimestre Int
  anno              Int
  OfertaAcademica OfertaAcademica[]
  Curso             Curso[]
 EncabezadoFactura EncabezadoFactura[]
}

model Materia {
  id              Int          @id @default(autoincrement())
  nombre          String
  codigo          String       @unique
  id_plan_estudios Int
  PlanEstudios    PlanEstudios @relation(fields: [id_plan_estudios], references: [id], onDelete: Cascade)
  Curso           Curso[]

}

model Curso {
  id              Int             @id @default(autoincrement())
  id_materia      Int
  Materia         Materia         @relation(fields: [id_materia], references: [id])
  id_docente      Int
  Usuario         Usuario         @relation(fields: [id_docente], references: [id])
  horario         String
  aula            String
  id_cuatrimestre Int
  Cuatrimestre    Cuatrimestre    @relation(fields: [id_cuatrimestre], references: [id], onDelete: Cascade)

  DetalleFactura DetalleFactura[]
  OfertaAcademica OfertaAcademica[]
  HistoricoAcademico HistoricoAcademico[]
  CuMatricula Matricula[]
}

model Matricula {
  id         Int      @id @default(autoincrement())
  id_usuario Int
  id_curso   Int
  fecha      DateTime @default(now())
  estado     String   // Por ejemplo: "Activa", "Cancelada", "Pendiente"

  Usuario    Usuario  @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  Curso      Curso    @relation(fields: [id_curso], references: [id], onDelete: Cascade)
}
model OfertaAcademica {
  id       Int   @id @default(autoincrement())
  id_curso Int
  id_carrera Int
  id_cuatrimestre Int
  anno  String

  


  Curso    Curso @relation(fields: [id_curso], references: [id], onDelete: Cascade)
  Cuatrimestre    Cuatrimestre    @relation(fields: [id_cuatrimestre], references: [id], onDelete: Cascade)

  Carrera   Carrera   @relation(fields: [id_carrera], references: [id], onDelete: Cascade)

}

model HistoricoAcademico {
  id         Int    @id @default(autoincrement())
  id_usuario Int
  id_curso   Int

  Usuario    Usuario @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  Curso      Curso   @relation(fields: [id_curso], references: [id], onDelete: Cascade)
  nota       Float
}

model Auditoria {
  id          Int      @id @default(autoincrement())
  id_usuario  Int
  Usuario     Usuario  @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  accion      String
  fecha_hora  DateTime  @default(now()) @updatedAt
  descripcion String
}

model EncabezadoFactura{
id Int @id @default(autoincrement())
id_cuatrimestre Int
id_carrera Int
id_usuario Int
fecha_hora  DateTime  @default(now()) 

Carrera    Carrera @relation(fields: [id_carrera], references: [id], onDelete: Cascade)
Cuatrimestre    Cuatrimestre    @relation(fields: [id_cuatrimestre], references: [id], onDelete: Cascade)
Usuario    Usuario    @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
DetalleFactura DetalleFactura[]
}

model DetalleFactura {
  id Int @id @default(autoincrement())
  id_curso   Int 
  id_encabezadofactura Int
  precio_unitario Float

  Curso Curso @relation(fields: [id_curso], references: [id], onDelete: Cascade)
  EncabezadoFactura EncabezadoFactura @relation(fields: [id_encabezadofactura], references:[id], onDelete: Cascade)
}


